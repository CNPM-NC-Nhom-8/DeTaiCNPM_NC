// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearchPostgres"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Role {
  KhachHang
  NhanVien
  QuanTriVien
}

enum Insurance {
  None
  OneToOneVIP6Months
  ReplacementOr12MonthsRepair
  OneToOneVIP12Months
  DropOrWaterDamage
}

model CartItem {
  MaCartItem String   @id @default(uuid())
  addedAt    DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt

  Quantity      Int
  InsuranceType Insurance @default(None)

  MaSP    String
  SanPham SanPhamBienThe @relation(fields: [MaSP], references: [MaSP], onDelete: Cascade, onUpdate: Cascade)

  MaKhachHang String
  KhachHang   KhachHang @relation(fields: [MaKhachHang], references: [MaKhachHang], onDelete: Cascade, onUpdate: Cascade)
}

model TaiKhoan {
  MaTaiKhoan String @id // Sync với database thay vì tự đạo

  Ho          String?
  Ten         String?
  TenTaiKhoan String?
  Email       String  @unique
  SDT         String? @unique
  Banned      Boolean @default(false)

  NgayTaoTK  DateTime @default(now())
  AnhDaiDien String

  Role Role @default(KhachHang)

  KhachHang KhachHang?
}

// Khach Hang
model KhachHang {
  MaKhachHang String  @id // Sync với database thay vì tự đạo
  DiaChi      String?

  // Tạo liên kết với bảng LoaiThanhVien
  MaLKH         String
  LoaiKhachHang LoaiKhachHang @relation(fields: [MaLKH], references: [MaLKH], onUpdate: Restrict, onDelete: Restrict)

  MaTaiKhoan String   @unique
  TaiKhoan   TaiKhoan @relation(fields: [MaTaiKhoan], references: [MaTaiKhoan], onUpdate: Cascade, onDelete: Cascade)

  DonHang         DonHang[]
  DanhGia         DanhGia[]
  CartItem        CartItem[]
  SanPhamYeuThich SanPhamYeuThich[]
}

model LoaiKhachHang {
  MaLKH     String @id @default(uuid())
  TenLoaiTV String @unique

  KhachHang       KhachHang[]
  PhamViKhuyenMai PhamViKhuyenMai[] // 1 Loại khách hàng có thể ở trong nhiều phạm vi
}

// TODO: Add type for khuyen mai
enum LoaiKhuyenMai {
  Voucher
  PhoneSale
}

// Khuyen Mai
model KhuyenMai {
  MaKhuyenMai String   @id // Mã không tự động tạo, đề cho admin tự quyết định mã
  TenKM       String
  NgayBD      DateTime
  NgayKT      DateTime
  UuDai       Float // Giảm bao nhiêu phần %
  NoiDung     String

  Type LoaiKhuyenMai

  PhamViKhuyenMai PhamViKhuyenMai?
  DonHang         DonHang[]
}

model PhamViKhuyenMai {
  MaPhamViKhuyenMai String @id @default(uuid())

  MaKhuyenMai String  @unique
  MaSPM       String?
  MaLKH       String?

  KhuyenMai     KhuyenMai       @relation(fields: [MaKhuyenMai], references: [MaKhuyenMai], onDelete: Cascade, onUpdate: Cascade)
  SanPhamMau    SanPhamMau[]
  LoadThanhVien LoaiKhachHang[]
}

model SanPhamYeuThich {
  MaSPM      String
  SanPhamMau SanPhamMau @relation(fields: [MaSPM], references: [MaSPM], onDelete: Cascade, onUpdate: Cascade)

  MaKhachHang String
  KhachHang   KhachHang @relation(fields: [MaKhachHang], references: [MaKhachHang], onDelete: Cascade, onUpdate: Cascade)

  @@id([MaSPM, MaKhachHang])
}

// Sản phẩm mẫu
model SanPhamMau {
  MaSPM   String @id @default(uuid()) // Tự động tạo 1 mã UUID
  TenSP   String @unique
  MoTa    String
  DacDiem String
  AnhBia  String

  HinhAnh        HinhAnh[] // 1 Sản phẩm có thể có nhiều hình ảnh
  DanhGia        DanhGia[] // 1 Sản phẩm có thể có nhiều đánh giá
  SanPhamBienThe SanPhamBienThe[]

  ThongSoKyThuat ThongSoKyThuat?

  // 1 sản phẩm chỉ có thể có 1 nhà sẩn xuất
  HSX   HangSanXuat @relation(fields: [MaHSX], references: [MaHSX], onDelete: Restrict, onUpdate: Restrict)
  MaHSX String

  NgayThem DateTime @default(now()) @db.Timestamp(3)

  // Khuyen Mai
  PhamViKhuyenMai PhamViKhuyenMai[]
  SanPhamYeuThich SanPhamYeuThich[]
  FAQ             FAQ[]
}

model FAQ {
  MaCauHoi String @id @default(uuid())

  CauHoi String
  TraLoi String

  MaSPM      String
  SanPhamMau SanPhamMau @relation(fields: [MaSPM], references: [MaSPM], onDelete: Cascade, onUpdate: Cascade)

  @@index([MaSPM])
}

model ThongSoKyThuat {
  MaThongSo String @id @default(uuid())

  ManHinh    String
  HeDieuHanh String
  CamTruoc   String
  CamSau     String
  Chip       String
  RAM        String
  DungLuong  String
  SIM        String
  Pin        String

  SanPham SanPhamMau @relation(fields: [MaSPM], references: [MaSPM], onDelete: Cascade, onUpdate: Cascade)
  MaSPM   String     @unique
}

model DanhGia {
  MaDanhGia   String   @id @default(uuid())
  NoiDungDG   String
  SoSao       Int
  NgayDanhGia DateTime @default(now())

  MaTraLoi  String?
  TraLoiCho DanhGia?  @relation("TraLoiCho", fields: [MaTraLoi], references: [MaDanhGia], onDelete: Cascade, onUpdate: Cascade)
  TraLoiBoi DanhGia[] @relation("TraLoiCho")

  SanPhamMau SanPhamMau @relation(fields: [MaSPM], references: [MaSPM], onDelete: Cascade, onUpdate: Cascade)
  MaSPM      String

  TenKhachHang String?
  MaKhachHang  String?
  KhachHang    KhachHang? @relation(fields: [MaKhachHang], references: [MaKhachHang], onDelete: Cascade, onUpdate: Cascade)

  @@index([MaDanhGia, MaKhachHang])
}

model HangSanXuat {
  MaHSX  String @id @default(uuid())
  TenHSX String

  // 1 nhà sản xuất có thể có nhiều sản phẩm
  SanPhamMau SanPhamMau[]
}

model HinhAnh {
  MaHA    String @id @default(uuid())
  TenHinh String
  Url     String

  // 1 Hình ảnh chỉ có thể có ở 1 sản phẩm
  SanPham SanPhamMau @relation(fields: [MaSPM], references: [MaSPM], onDelete: Cascade, onUpdate: Cascade)
  MaSPM   String
}

// Don Hang
model DonHang {
  MaDonHang    String   @id @default(uuid())
  Email        String
  SDT          String
  HoTen        String
  DiaChi       String
  PhuongThucTT String
  TrangThai    String
  TongTien     Float // Float vì số tiền có thể lẽ
  NgayDat      DateTime @default(now())

  CT_DonHang CT_DonHang[]

  MaKhuyenMai String?
  KhuyenMai   KhuyenMai? @relation(fields: [MaKhuyenMai], references: [MaKhuyenMai])

  maKhachHang String?
  KhachHang   KhachHang? @relation(fields: [maKhachHang], references: [MaKhachHang], onDelete: Cascade, onUpdate: Cascade)
}

model CT_DonHang {
  MaCT_DH       String    @id @default(uuid())
  InsuranceType Insurance @default(None)
  SoLuong       Int

  MaSP    String
  SanPham SanPhamBienThe @relation(fields: [MaSP], references: [MaSP], onDelete: Cascade, onUpdate: Cascade)

  MaDonHang String
  DonHang   DonHang @relation(fields: [MaDonHang], references: [MaDonHang], onDelete: Cascade, onUpdate: Cascade)

  MaMH    String
  MatHang MatHang @relation(fields: [MaMH], references: [MaMH])

  @@unique([MaSP, MaMH, MaDonHang])
}

model SanPhamBienThe {
  MaSP      String @id @default(uuid())
  DungLuong String
  Mau       String
  Gia       Float

  SanPhamMau SanPhamMau @relation(fields: [MaSPM], references: [MaSPM], onDelete: Cascade, onUpdate: Cascade)
  MaSPM      String

  CT_DonHang CT_DonHang[]
  CartItem   CartItem[]

  MatHang MatHang?
}

model MatHang {
  MaMH     String   @id @default(uuid())
  TonKho   Int
  NgayNhap DateTime

  MaSP    String         @unique
  SanPham SanPhamBienThe @relation(fields: [MaSP], references: [MaSP])

  CT_DonHang CT_DonHang[]
}
